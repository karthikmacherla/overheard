name: Build Overheard and Deploy

# Run this workflow every time a new commit pushed to your repository
on: push

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE_NAME: overheard-backend
  FRONTEND_IMAGE_NAME: overheard-frontend
  sha: ${{ github.sha }}
  REPO: ${{ github.repository }}

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  test:
    # Name the Job
    name: Test application
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install backend dependencies
        run: |
          cd server
          python3 --version
          poetry --version
          poetry install
      - name: Run backend tests
        run: |
          cd server/src/
          poetry run python test.py

  build-backend:
    # Name the Job
    name: Build and publish backend image
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.SERVER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{raw}}
            type=sha,prefix=,format=long

      - name: Build and push server image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: server
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  build-frontend:
    # Name the Job
    name: Build and publish frontend image
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            # type=ref,event=branch
            type=semver,pattern={{raw}}
            type=sha,prefix=,format=long
      - name: Inject .env file
        run: |
          touch client/.env
          echo "REACT_APP_SERVER_HOST = https://kmacher.cis188.org/api" >> client/.env

      - name: Build and push frontend image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: client
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
